《大话设计模式》读书笔记（13） 
												好菜每回味不同----建造者模式
												
												 
												
												
												
	1. 建造者模式(Builder)：又称为生成者模式，将一个复杂对象的建造与他的表示分离，使得同样的构建过程可以创建不同的表示。建造者模式属于创建型模式

		* Builder类：是为创建一个Product对象的各个部件指定的抽象接口(具体的Product类需要的接口)
		* ConcreteBuilder类：是具体的建造者，继承Builder类，并实现Buiilder类中的接口，构造和装配各个部件。
		* Product：就是具体的产品角色。通过Director类将ConcreteBuilder类实例化之后获得的对象；
		* Director类：是一个指挥者的角色，用来根据需求构建出Product，在该类中使用Builder类的接口
	2. 建造者模式是逐步建造产品的，所以建造者的Builder类中的那些建造方法必须足够普遍，以便为各种类型的具体建造者构建。
	3. 建造者模式的使用场景：主要是用于创建一些复杂的对象，这些对象内部构建间的建造顺序通常是稳定的，但对象内部的构建通常面临着复杂的变化（也就是说使用指挥者类Director类控制建造产品的流程顺序，在ConcreteBuilder类中控制产品对象的实际实现）
		* 需要生成的对象具有复杂的内部结构
		* 需要生成的对象内部属性本身相互依赖
	4. 建造者模式的好处：将建造对象代码和表示代码分离，由于建造者隐藏了该产品是如何组装的，所以若要改变一个产品的内部表示，著需要再定义一个具体的建造者即可。


