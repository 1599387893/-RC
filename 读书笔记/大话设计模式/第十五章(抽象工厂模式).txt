《大话设计模式》读书笔记（15）
													就不能不换DB吗？----抽象工厂模式
											
											
											
											
	1. 抽象工厂模式(Abstract Factory)：提供一个创建一系列相关或相互依赖对象的接口，而无需指定它们具体的类。抽象工程模式属于创建型模式。
	2. 抽象工厂模式的优缺点：
		* 优点：第一点就是易于交换产品系列，由于具体工厂类，在一个应用中只需要在初始化的时候出现一次，这就使得改变一个应用的具体工厂变得容易，它只需要改变具体工厂即可使用不同的产品配置。第二点是让具体的创建实例过程与客户端分离，客户端是通过它们的抽象接口操作实例，产品的具体类名也被具体工厂的实现分离，不会出现在客户端代码中；
		* 缺点：当需要增加产品时，需要实现新产品的接口类，并修改工厂类。修改的部分比较多。
	3. 依赖注入(Dependenct Injection)：是一种编程方式。
	4. 所有在用是简单工厂的地方，都可以考虑用反射技术来去除swtich或if分支，解除分支判断带来的耦合。
	5. 抽象工厂模式的适用场景：系统的产品有多于一个的产品族，而系统只消费其中某一族的产品；
		* QQ换皮肤，一整套一起换
		* 生成不同操作系统的程序
	6. 简单工厂模式，工厂方法模式和抽象工厂模式的异同：
		1. 简单工厂模式：
			* 组成：工厂类，抽象产品类，具体产品类；
			* 工厂类是简单工厂模式的核心，在工厂类中做一定的逻辑判断，来确定需要创建的产品。
		2. 工厂方法模式：
			* 组成：抽象工厂类，具体工厂类，抽象产品类，具体产品类
			* 最终都是通过操作抽象来控制具体；
			* 工厂方法模式将简单工厂的内部判断逻辑转移到了客户端代码上执行。
			* 工厂方法模式克服了简单工厂模式的缺点，工厂方法模式完全满足OCP(有很好的扩展性)
		3. 抽象工厂模式：
			* 组成：多个抽象产品类，多个具体产品类，抽象工厂类，具体工厂类
			* 该模式下有多个抽象产品类，每个抽象产品类可以派生出多个具体产品类，一个抽象工厂类，可以派生出多个具体工厂类，每个具体工厂类可以创建多个具体产品类的实例。


